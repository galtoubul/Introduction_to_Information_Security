Using the core dump that was generated by q2a.py I found these stack adresses:
1) buff[0] - 0xbfffe02f - the start of "Thisissalt" (10B)
2) buf[10] - 0xbfffe039 - the start of my nop slide (38B)
3) buf[64] - 0xbfffe070
4) ra      - 0xbfffe07c

I wrote my shellcode similarly to we have done at recitation 4 and completed these
missing parts:
1) I xored eax before moving 11 into it so that eax == 11
2) Since we don't have any args I xored ecx
3) Xored edx since we want envp to be 0 as well
4) As talked at class, I changed the @ the end of "\bin\sh\ to \0

I chose to use nop slide since I find it easier to jump to a bigger place
rather than a specific address, in addition to the fact that it is more
resilient to stack addresses changes (though we have been told that we don't
must to handle this case). I tried to jump to the middle of the nop slide
so that I will be "covered" from both directions of stack movement.